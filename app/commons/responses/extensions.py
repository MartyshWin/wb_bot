import json
import random
import string
import logging
from typing import TypeVar, Hashable, Literal, Sequence

from app.schemas.general import ResponseModel

T = TypeVar("T", bound=Hashable)

class BaseHandlerExtensions:
    def __init__(self):
        self.lang: dict[str, dict[str, str]] = {}
        # text = self.lang.get("create_task_list", {}).get("space", "üîí no text")

    @staticmethod
    def format_response(
        text: str | dict[str, object],
        keyboard: object | None = None,
        array_activity: bool = False,
        status: bool = True,
        popup_text: str | None = None,
        popup_alert: bool | None = None
    ) -> ResponseModel:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è.

        :param text: –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
        :param keyboard: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        :param array_activity: –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è —Å–ª–æ–≤–∞—Ä—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
        :param status: –î–ª—è —É–∫–∞–∑–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        :param popup_text: –¢–µ–∫—Å—Ç –¥–ª—è –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞
        :param popup_alert: –°—Ç–∞—Ç—É—Å –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞, True - —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
        :return: –°–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–∞–º–∏ 'status', 'text' –∏ 'kb'
        """
        return ResponseModel(
            status=status,
            text=text['response'] if array_activity else text,
            kb=text['keyboard'] if array_activity else (keyboard or None),
            popup_text=popup_text,
            popup_alert=popup_alert
        )

    @staticmethod
    def safe_get(
            seq: Sequence[T],
            index: int,
            default: T | None = None,
    ) -> T | None:
        """
        –ë–µ–∑–æ–ø–∞—Å–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç `seq[index]`, –Ω–µ –ø–æ–¥–Ω–∏–º–∞—è `IndexError`.

        data = ["zero", "one", "two"]
        element = safe_get(data, 1)                 # ‚Üí "one"
        element = safe_get(data, 10)                # ‚Üí None
        element = safe_get(data, 10, default="-")   # ‚Üí "-"
        element = safe_get(data, -1)                # ‚Üí "two"

        letters = ("a", "b", "c")
        element = safe_get(letters, 0)              # ‚Üí "a"

        ‚Ä¢ seq     ‚Äì –ª—é–±–æ–π –∏–Ω–¥–µ–∫—Å–∏—Ä—É–µ–º—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (`list`, `tuple`, `str`, ‚Ä¶)
        ‚Ä¢ index   ‚Äì —Ü–µ–ª–µ–≤–æ–π –∏–Ω–¥–µ–∫—Å (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ)
        ‚Ä¢ default ‚Äì –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –∏–Ω–¥–µ–∫—Å –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
        """
        return seq[index] if -len(seq) <= index < len(seq) else default